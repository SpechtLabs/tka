basePath: /api/v1alpha1
definitions:
  models.ErrorResponse:
    description: Structured error response with contextual advice
    properties:
      advice:
        description: |-
          List of suggestions to help resolve the error
          example: ["Check your Tailscale connection", "Verify you have the required capabilities"]
        items:
          type: string
        type: array
      message:
        description: |-
          Primary error message
          example: Failed to authenticate user
        type: string
    type: object
  models.UserLoginResponse:
    description: Contains authenticated user information and session details
    properties:
      role:
        description: |-
          Role assigned to the user in Kubernetes
          example: cluster-admin
        type: string
      until:
        description: |-
          Expiration timestamp of the authentication credentials in RFC3339 format
          example: 2023-12-31T23:59:59Z
        type: string
      username:
        description: |-
          Username of the authenticated user
          example: alice@example.com
        type: string
    type: object
info:
  contact:
    email: tka@specht-labs.de
    name: Specht Labs
    url: specht-labs.de
  description: API for authenticating and authorizing Kubernetes access via Tailscale
    identity.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Tailscale Kubernetes Auth API
  version: "1.0"
paths:
  /api/v1alpha1/kubeconfig:
    get:
      description: Generates and returns a kubeconfig file for the authenticated Tailscale
        user
      produces:
      - application/yaml
      - application/json
      responses:
        "200":
          description: OK - Returns kubeconfig file
          schema:
            type: file
        "400":
          description: Bad Request - Tagged nodes not supported or error unmarshaling
            capability or multiple capability rules
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Request from Funnel or no capability rule found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found - User not authenticated or credentials not ready
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Error with WhoIs or generating kubeconfig
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - TailscaleAuth: []
      summary: Get kubeconfig for authenticated user
      tags:
      - authentication
  /api/v1alpha1/login:
    get:
      description: Retrieves the current authentication status for a Tailscale user
      produces:
      - application/json
      responses:
        "200":
          description: OK - Returns the current user authentication status
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request - Tagged nodes not supported or error unmarshaling
            capability or multiple capability rules
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Request from Funnel or no capability rule found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Error with WhoIs or retrieving user
            status
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - TailscaleAuth: []
      summary: Get user authentication status
      tags:
      - authentication
    post:
      consumes:
      - application/json
      description: Authenticates a user through Tailscale, validates their capability
        rule, and provisions Kubernetes credentials
      produces:
      - application/json
      responses:
        "202":
          description: Accepted - User authenticated and credentials are being provisioned
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request - Tagged nodes not supported or error unmarshaling
            capability or multiple capability rules
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Request from Funnel or no capability rule found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity - Invalid capability rule (period too
            short)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Error with WhoIs, parsing duration,
            or signing in user
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - TailscaleAuth: []
      summary: Authenticate user and provision Kubernetes credentials
      tags:
      - authentication
  /api/v1alpha1/logout:
    post:
      description: Revokes Kubernetes credentials for the authenticated Tailscale
        user
      produces:
      - application/json
      responses:
        "200":
          description: OK - User successfully logged out with login info
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request - Tagged nodes not supported or error unmarshaling
            capability or multiple capability rules
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Request from Funnel or no capability rule found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found - User not authenticated
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Error with WhoIs, parsing duration,
            or during logout process
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - TailscaleAuth: []
      summary: Log out authenticated user
      tags:
      - authentication
securityDefinitions:
  TailscaleAuth:
    description: Authentication happens automatically via the Tailscale network. The
      server performs a WhoIs lookup on the client's IP address to determine identity.
      This header is for documentation purposes only and is not actually required
      to be set.
    in: header
    name: X-Tailscale-User
    type: apiKey
swagger: "2.0"
